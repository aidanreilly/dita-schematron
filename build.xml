<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project name="dita-schematron">
  
  <target name="-init">
    <tstamp>
      <format property="DATE_STAMP" pattern="yyyyMMddhhmmssSSS"/>
      <format property="YEAR" pattern="yyyy"/>
    </tstamp>
    <property name="src.dir" location="${basedir}/src"/>
    <property name="sch.dir" location="${src.dir}/sch"/>
    <property name="plugin.dir" location="${src.dir}/plugin"/>
    <property name="dist.dir" location="${basedir}/dist"/>
    <property environment="env"/>
    <condition property="tmp.dir" value="${env.TEMP}/${ant.project.name}">
      <isset property="env.TEMP"/>
    </condition>
    <condition property="tmp.dir" value="${env.TMP}/${ant.project.name}">
      <isset property="env.TMP"/>
    </condition>
    <condition property="tmp.dir" value="${env.TMPDIR}/${ant.project.name}">
      <isset property="env.TMPDIR"/>
    </condition>
    <property name="tmp.dir" location="${basedir}/work"/>
    <property name="work.dir" location="${tmp.dir}/${DATE_STAMP}"/>
    <!--property name="build.dir" location="${basedir}/build"/-->
    <!--property name="compiler.dir" location="${basedir}/iso-schematron-xslt2"/-->
    <property name="compiler.dir" location="${basedir}/iso-schematron-xslt2"/>
    <condition property="compiler.exists" value="true">
      <available file="${compiler.dir}"/>
    </condition>
    
    <filter token="release.version" value="${release.version}"/>
    <filter token="release.year" value="${YEAR}"/>
  </target>
  
  <target name="compile.sch" depends="-init">
    <fail unless="release.version">release.version not defined</fail>
    <tempfile destdir="${tmp.dir}" property="temp.file"/>
    <xslt style="build.xsl" in="${sch.dir}/dita.sch" out="${temp.file}">
      <param name="release.version" expression="${release.version}"/>
    </xslt>
    <delete file="${temp.file}"/>
  </target>
  
  <target name="-init.compile.xslt" depends="-init" unless="compiler.exists">
    <mkdir dir="${work.dir}"/>
    <!--http://www.schematron.com/tmp/iso-schematron-xslt2.zip-->
    <get src="http://schematron.googlecode.com/files/iso-schematron-xslt2.zip"
         dest="${work.dir}/iso-schematron-xslt2.zip"/>
    <unzip src="${work.dir}/iso-schematron-xslt2.zip" dest="${compiler.dir}" overwrite="yes"/>
  </target>
	
  <macrodef name="compile">
    <attribute name="phase"/>
    <attribute name="suffix"/>
    <sequential>
      <xslt style="${compiler.dir}/iso_dsdl_include.xsl"
        basedir="${sch.dir}" destdir="${work.dir}"
        extension=".tmp" force="true">
        <include name="dita-1.2-for-xslt2.sch"/>
        <!--include name="*-*.sch"/-->
      </xslt>
      <xslt style="${compiler.dir}/iso_abstract_expand.xsl"
        basedir="${work.dir}" destdir="${work.dir}"
        extension=".sch" force="true">
        <include name="*-*.tmp"/>
      </xslt>
      <xslt style="${basedir}/plugin.xsl"
        basedir="${work.dir}" destdir="${work.dir}"
        extension="@{suffix}.xsl" force="true">
        <include name="*-*.sch"/>
        <param name="phase" expression="@{phase}"/>
      </xslt>
    </sequential>
  </macrodef>
	
  <target name="compile.xslt" depends="-init, compile.sch, -init.compile.xslt">
    <mkdir dir="${work.dir}"/>
    <compile phase="#ALL" suffix=""/>
    <compile phase="mandatory" suffix="-mandatory"/>
    <compile phase="recommendation" suffix="-recommendation"/>
    <compile phase="author" suffix="-author"/>
    <compile phase="other" suffix="-other"/>
    <!--
    <delete>
      <fileset dir="${work.dir}">
        <include name="*.tmp"/>
        <include name="*.sch"/>
      </fileset>
    </delete>
    -->
  </target>
  
  <target name="dist.schema" depends="-init, compile.sch">
    <fail unless="release.version">Property 'release.version' not set</fail>
    <mkdir dir="${dist.dir}"/>
    <zip file="${dist.dir}/dita-schematron_${release.version}.zip">
      <fileset dir="${src.dir}" includes="LICENSE"/>
      <fileset dir="${sch.dir}">
        <include name="dita-1.1-for-xslt1.sch"/>
        <include name="dita-1.1-for-xslt2.sch"/>
        <include name="dita-1.2-for-xslt1.sch"/>
        <include name="dita-1.2-for-xslt2.sch"/>
      </fileset>
    </zip>
  </target>
  
  <target name="dist.plugin" depends="-init, compile.sch, compile.xslt">
    <fail unless="release.version">Property 'release.version' not set</fail>
            
    <xslt style="${basedir}/messages.xsl"
          in="${work.dir}/dita-1.2-for-xslt2.sch"
          out="${work.dir}/messages.xml"/>
    
    <property name="plugin.dist.dir" location="${work.dir}/com.github.dita-schematron"/>
    <mkdir dir="${plugin.dist.dir}"/>    
    <copy todir="${plugin.dist.dir}" filtering="yes">
      <fileset dir="${plugin.dir}">
        <include name="build.xml"/>
        <include name="integrator.xml"/>
        <include name="plugin.xml"/>
      </fileset>
    </copy>
    <copy todir="${plugin.dist.dir}">
      <fileset dir="${src.dir}">
        <include name="LICENSE"/>
      </fileset>
    </copy>
    <mkdir dir="${plugin.dist.dir}/xslt"/>
    <copy todir="${plugin.dist.dir}/xslt" filtering="yes">
      <fileset dir="${work.dir}">
        <include name="dita-1.2-for-xslt2*.xsl"/>
      </fileset>
    </copy>
    <mkdir dir="${plugin.dist.dir}/resource"/>
    <copy todir="${plugin.dist.dir}/resource" filtering="yes">
      <fileset dir="${work.dir}">
        <include name="messages.xml"/>
      </fileset>
    </copy>

    <zip file="${dist.dir}/com.github.dita-schematron_${release.version}.zip">
      <fileset dir="${work.dir}">
        <include name="com.github.dita-schematron/**"/>
      </fileset>
    </zip>
  </target>
    
  <target name="clean" depends="-init">
    <delete dir="${tmp.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>
  
</project>